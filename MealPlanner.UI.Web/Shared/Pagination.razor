﻿@if (TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination pagination-primary">

            @if (ShowGoToFirst)
            {
                <li class="page-item">
                    <button type="button" class="page-link" @onclick="async () => await OnPageChangedAsync(1)">
                        <span aria-hidden="true">&laquo;</span>

                    </button>
                </li>
            }

            @if (HasPrevious)
            {
                <li class="page-item">
                    <button type="button" class="page-link" @onclick="async () => await OnPageChangedAsync(CurrentPage - 1)">
                        <span aria-hidden="true">&lsaquo;</span>
                    </button>
                </li>
            }

            @if (StartPage != MaxPage)
            {
                @for (var i = StartPage; i <= MaxPage; i++)
                {
                    var pageNumber = i;
                    var subClass = CurrentPage == i ? "active" : string.Empty;

                    <li class="page-item @subClass">
                        <button type="button" class="page-link" @onclick="async () => await OnPageChangedAsync(pageNumber)">
                            @i
                        </button>
                    </li>
                }
            }

            @if (HasNext)
            {
                <li class="page-item">
                    <button class="page-link" @onclick="async () => await OnPageChangedAsync(CurrentPage + 1)">
                        <span aria-hidden="true">&rsaquo;</span>
                    </button>
                </li>
            }

            @if (ShowGoToLast)
            {
                <li class="page-item">
                    <button type="button" class="page-link" @onclick="async () => await OnPageChangedAsync(TotalPages)">
                        <span aria-hidden="true">&raquo;</span>

                    </button>
                </li>
            }
        </ul>
    </nav>
}
