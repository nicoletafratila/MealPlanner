@page "/recipecategoriesoverview"
@using RecipeBook.Shared.Models

<Breadcrumb style="--bs-breadcrumb-divider: '>';" Items="NavItems"></Breadcrumb>

<div class="col-sm-6">
    <div class="card">
        <div class="card-header">
            <table>
                <tr>
                    <td style="width: 100%;">
                        <h2>Recipe categories</h2>
                    </td>
                    <td style="white-space: nowrap;">
                        <button class="btn btn-primary btn-sm" type="button" @onclick="() => New()">New</button>
                    </td>
                </tr>
            </table>
        </div>

        <div class="card-body">
            @*  <TableTemplate Data="@Categories!.Items" ShowIndex="true">
            <TableHeader>
            <th>Name</th>
            <th style="width: 100px"></th>
            <th style="width: 50px"></th>
            <th style="width: 30px"></th>
            </TableHeader>
            <RowTemplate Context="category">
            <td>
            @category.Name
            </td>
            <td>
            @if (category.IsSelected)
            {
            <button class="btn btn-primary btn-sm" type="button" @onclick="() => MoveUp(category)" disabled="@(!CanMoveUp(category))">&#9650;</button>
            <button class="btn btn-primary btn-sm" type="button" style="margin-left: 5px;" @onclick="() => MoveDown(category)" disabled="@(!CanMoveDown(category))">&#9660;</button>
            }
            </td>
            <td><button class="btn btn-primary btn-sm" type="button" @onclick="() => Update(category)">Edit</button></td>
            <td><button class="btn-close btn-sm" type="button" @onclick="() => DeleteAsync(category)"></button></td>
            </RowTemplate>
            </TableTemplate> *@

            <GridTemplate TItem="RecipeCategoryModel" @ref="recipeCategoryGrid" DataProvider="CategoriesDataProvider" TableGridClass="table table-hover table-striped">
                <Columns>
                    <GridColumn TItem="RecipeCategoryModel" HeaderText="#" PropertyName="Index" Filterable="false" Sortable="false">
                        @context.Index
                    </GridColumn>
                    <GridColumn FilterTextboxWidth="600" TItem="RecipeCategoryModel" HeaderText="Name" PropertyName="Name" SortString="Name" SortKeySelector="item => item.Name" IsDefaultSortColumn="true" SortDirection="SortDirection.Ascending" StringComparison="StringComparison.OrdinalIgnoreCase">
                        @context.Name
                    </GridColumn>
                    <GridColumn TItem="RecipeCategoryModel" FilterTextboxWidth="200" Filterable="false" Sortable="false">
                        @if (context.IsSelected)
                        {
                            <button class="btn btn-primary btn-sm" type="button" @onclick="() => MoveUp(context)" disabled="@(!CanMoveUp(context))">&#9650;</button>
                            <button class="btn btn-primary btn-sm" type="button" style="margin-left: 5px;" @onclick="() => MoveDown(context)" disabled="@(!CanMoveDown(context))">&#9660;</button>
                        }
                    </GridColumn>
                    <GridColumn TItem="RecipeCategoryModel" Filterable="false" Sortable="false" Class="text-start-right">
                        <button class="btn btn-primary btn-sm" type="button" @onclick="() => Update(context)">Edit</button>
                    </GridColumn>
                    <GridColumn TItem="RecipeCategoryModel" Filterable="false" Sortable="false" Class="text-start-right">
                        <button class="btn-close btn-sm" type="button" @onclick="() => DeleteAsync(context)"></button>
                    </GridColumn>
                </Columns>
            </GridTemplate>
        </div>
    </div>

    <div class="col mt-3">
        <button class="btn btn-primary btn-sm" type="button" @onclick="() => SaveAsync()">Save</button>
    </div>
</div>

<ConfirmDialog @ref="dialog" />