@page "/shoppinglistedit"
@page "/shoppinglistedit/{id}"

@if (Model != null)
{
    <div class="col-sm-6">
        <div class="card">
            <div class="card-header">
                <div class="row g-0">
                    <div class="col-md-8">
                        <h2>@Model.Name</h2>
                    </div>
                </div>
            </div>

            <div class="card-body">
                <EditForm Model="@Model" OnValidSubmit="@SaveAsync">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <label for="name" class="col-sm-3">Shopping list name: </label>
                        <InputText id="name" class="form-control" @bind-Value="@Model.Name" placeholder="Enter shopping list name"></InputText>
                        <ValidationMessage For="@(() => Model.Name)" />
                    </div>

                    <div class="form-group mt-3">
                        <label for="ProductCategory" class="col-sm-3">Product category: </label>
                        <InputSelect id="ProductCategory" class="form-select" ValueChanged="@((string value) => OnProductCategoryChangedAsync(value))"
                                     Value="ProductCategoryId" ValueExpression="@(() => ProductCategoryId)">
                            <option selected value="0">Choose...</option>
                            @if (ProductCategories != null && ProductCategories.Any())
                            {
                                @foreach (var item in ProductCategories)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            }
                        </InputSelect>
                    </div>

                    <div class="form-group mt-3">
                        <label for="Product" class="col-sm-3">Product: </label>
                        <InputSelect id="Product" class="form-select" ValueChanged="@((string value) => OnProductChanged(value))"
                                     Value="ProductId" ValueExpression="@(() => ProductId)">
                            <option selected value="0">Choose...</option>
                            @if (Products != null && Products!.Items!.Any())
                            {
                                @foreach (var item in Products!.Items!)
                                {
                                    <option value="@item.Id">@item.Name (@item.Unit!.Name)</option>
                                }
                            }
                        </InputSelect>
                    </div>

                    <div class="form-group mt-3">
                        <label for="quantity" class="col-sm-3">Quantity: </label>
                        <div class="input-group">
                            <InputText id="quantity" class="form-control" @bind-Value="@Quantity" placeholder="Quantity"></InputText>
                            @if (CanAddProduct == true)
                            {
                                <button class="btn btn-primary" type="button" @onclick="@AddProduct">Add</button>
                            }
                            else
                            {
                                <button class="btn btn-primary" type="button" disabled @onclick="@AddProduct">Add</button>
                            }
                        </div>
                        <ValidationMessage For="@(() => Quantity)" />
                    </div>

                    <br />

                    <div class="card-body">
                        <TableTemplate Items="@Model.Products">
                            <TableCaption>Products:</TableCaption>
                            <TableHeader>
                                <th></th>
                                <th></th>
                                <th scope="col"></th>
                            </TableHeader>
                            <RowTemplate Context="ProductModel">
                                @if (ProductModel != null && ProductModel.Product != null)
                                {
                                    <td style="vertical-align:middle; text-align: center">
                                        <input type="checkbox" checked="@ProductModel.Collected" @onchange="eventArgs => { CheckboxChanged(ProductModel); }" />
                                    </td>
                                    <td style="vertical-align:middle">
                                        <div style="display:flex; align-items: center">
                                            <img src="@ProductModel.Product.ImageUrl" class="img-fluid" width="100" height="80" />
                                            <p>&nbsp;&nbsp;</p>
                                            <p>@ProductModel.Product.Name</p>
                                            <p>&nbsp;&nbsp;</p>
                                            <p>@ProductModel.Quantity</p>
                                            <p>&nbsp;&nbsp;</p>
                                            <p>@ProductModel.Product.Unit!.Name</p>
                                        </div>
                                    </td>
                                    <td><button class="btn-close btn-sm" type="button" @onclick="() => DeleteProductAsync(ProductModel.Product)"></button></td>
                                }
                            </RowTemplate>
                        </TableTemplate>

                        <button type="submit" class="btn btn-primary btn-sm">Save</button>
                        <button class="btn btn-danger btn-sm" type="button" @onclick="@DeleteAsync">Delete</button>
                        <button class="btn btn-primary btn-sm" type="button" @onclick="@NavigateToOverview">Back to overview</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}
