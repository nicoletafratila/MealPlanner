@page "/shoppinglistedit"
@page "/shoppinglistedit/{id}"

<Breadcrumb style="--bs-breadcrumb-divider: '>';" Items="_navItems"></Breadcrumb>

@if (ShoppingList != null)
{
    <div class="col-sm-6">
        <div class="card">
            <div class="card-header">
                <table>
                    <tr class="row g-0" style="display:contents">
                        <td class="col-md-8" style="vertical-align: top">
                            <h2 id="headerName">@ShoppingList.Name</h2>
                        </td>
                    </tr>
                </table>
            </div>

            <div class="card-body">
                <EditForm Model="@ShoppingList" OnValidSubmit="@SaveAsync">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <label for="name" class="col-sm-3">Shopping list name: </label>
                        <InputText id="name" class="form-control" @bind-Value="@ShoppingList.Name" placeholder="Enter shopping list name" oninput="updateHeader()"></InputText>
                        <ValidationMessage For="@(() => ShoppingList.Name)" />
                    </div>

                    <div class="form-group mt-3">
                        <label for="Shop" class="col-sm-3">Shop: </label>
                        <InputSelect id="Shop" class="form-select" @bind-Value="@ShopId">
                            <option selected value="0">Choose...</option>
                            @if (Shops != null && Shops.Items != null && Shops.Items.Any())
                            {
                                @foreach (var item in Shops.Items!)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            }
                        </InputSelect>
                    </div>

                    <div class="form-group mt-3">
                        <label for="ProductCategory" class="col-sm-3">Product category: </label>
                        <InputSelect id="ProductCategory" class="form-select" @bind-Value="@ProductCategoryId">
                            <option selected value="0">Choose...</option>
                            @if (ProductCategories != null && ProductCategories.Items != null && ProductCategories.Items.Any())
                            {
                                @foreach (var item in ProductCategories.Items)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            }
                        </InputSelect>
                    </div>

                    <div class="form-group mt-3">
                        <label for="Product" class="col-sm-3">Product: </label>
                        <InputSelect id="Product" class="form-select" @bind-Value="@ProductId">
                            <option selected value="0">Choose...</option>
                            @if (Products != null && Products!.Items!.Any())
                            {
                                @foreach (var item in Products?.Items!)
                                {
                                    <option value="@item.Id">@item.Name (@item.BaseUnit!.Name)</option>
                                }
                            }
                        </InputSelect>
                    </div>

                    <div class="form-group mt-3">
                        <label for="unit" class="col-sm-3">Unit of measurement: </label>
                        <InputSelect id="unit" class="form-select" @bind-Value="@UnitId">
                            <option selected value="0">Choose...</option>
                            @if (Units != null && Units.Any())
                            {
                                @foreach (var unit in Units!)
                                {
                                    <option value="@unit.Id">@unit.Name</option>
                                }
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => UnitId)" />
                    </div>

                    <div class="form-group mt-3">
                        <label for="quantity" class="col-sm-3">Quantity: </label>
                        <div class="input-group">
                            <InputText id="quantity" class="form-control" @bind-Value="@Quantity" @oninput="CheckQuantityAsync" placeholder="Enter the quantity for the product"></InputText>
                            <button id="addButton" class="btn btn-primary" type="button" @onclick="AddProduct" disabled="@(!CanAddProduct)">Add</button>
                        </div>
                        <ValidationMessage For="@(() => Quantity)" />
                    </div>

                    <br />

                    <div class="card-body">
                        <TableTemplate Data="@ShoppingList.Products">
                            <TableCaption>Products:</TableCaption>
                            <TableHeader>
                                <th></th>
                                <th></th>
                                <th style="width: 30px"></th>
                            </TableHeader>
                            <RowTemplate Context="ProductModel">
                                @if (ProductModel != null && ProductModel.Product != null)
                                {
                                    <td style="vertical-align:middle; text-align: center">
                                        <input type="checkbox" checked="@ProductModel.Collected" @onchange="async ()=> await CheckboxChangedAsync(ProductModel)" />
                                    </td>
                                    <td style="vertical-align:middle">
                                        <div style="display:flex; align-items: center">
                                            <img src="@ProductModel.Product.ImageUrl" class="img-fluid" width="100" height="80" />
                                            <p>&nbsp;&nbsp;</p>
                                            <p>@ProductModel.Product.Name</p>
                                            <p>&nbsp;&nbsp;</p>
                                            <p>@ProductModel.Quantity</p>
                                            <p>&nbsp;&nbsp;</p>
                                            <p>@ProductModel.Unit?.Name</p>
                                        </div>
                                    </td>
                                    <td><button class="btn-close btn-sm" type="button" @onclick="() => DeleteProductAsync(ProductModel.Product)"></button></td>
                                }
                            </RowTemplate>
                        </TableTemplate>

                        <button type="submit" class="btn btn-primary btn-sm">Save</button>
                        <button class="btn btn-danger btn-sm" type="button" @onclick="async ()=> await DeleteAsync()">Delete</button>

                        <button class="btn btn-primary btn-sm" type="button" style="margin:5px" @onclick="async ()=> await AddMealPlanAsync()" disabled="@(!CanAddMealPlan)">Add meal plan</button>
                        <button class="btn btn-primary btn-sm" type="button" style="margin:0px,5px, 5px, 5px" @onclick="async ()=> await AddRecipeAsync()" disabled="@(!CanAddRecipe)">Add recipe</button>
                        <button class="btn btn-primary btn-sm" type="button" style="margin:5px" @onclick="NavigateToOverview">Back to overview</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}

<ConfirmDialog @ref="_dialog" />

<script>
    function checkQuantity() {
        var quantity = document.getElementById("quantity").value;
        var unit = document.getElementById("unit").value;
        var addButton = document.getElementById("addButton");
        if (quantity > 0 && unit != "0") {
            addButton.disabled = false;
        } else {
            addButton.disabled = true;
        }
    }

    function updateHeader() {
        var input = document.getElementById("name").value;
        document.getElementById("headerName").innerText = input;
    }
</script>