@page "/recipeedit"
@page "/recipeedit/{id}"

<Breadcrumb style="--bs-breadcrumb-divider: '>';" Items="NavItems"></Breadcrumb>

@if (Recipe != null)
{
    <div class="col-sm-6">
        <div class="card">
            <div class="card-header">
                <table>
                    <tr class="row g-0" style="display:contents">
                        <td class="col-md-8" style="vertical-align: top">
                            <h2 id="headerName">@Recipe.Name</h2>
                        </td>
                        <td class="col-md-3" style="align-content:flex-end;">
                            <img class="img-fluid" src="@Recipe.ImageUrl" />
                        </td>
                    </tr>
                </table>
            </div>

            <div class="card-body">
                <EditForm Model="@Recipe" OnValidSubmit="@SaveAsync">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <label for="name" class="col-sm-3">Recipe name: </label>
                        <InputText id="name" class="form-control" @bind-Value="@Recipe.Name" placeholder="Enter recipe name" oninput="updateHeader()"></InputText>
                        <ValidationMessage For="@(() => Recipe.Name)" />
                    </div>

                    <div class="form-group mt-3">
                        <label for="source" class="col-sm-3">Original source: </label>
                        <InputText id="source" class="form-control" @bind-Value="@Recipe.Source" placeholder="Enter the url for the original source"></InputText>
                        <ValidationMessage For="@(() => Recipe.Source)" />
                    </div>

                    <div class="form-group mt-3">
                        <label for="recipeCategory" class="col-sm-3">Recipe category: </label>
                        <InputSelect id="recipeCategory" class="form-select" @bind-Value="@Recipe.RecipeCategoryId">
                            <option selected value="0">Choose...</option>
                            @if (RecipeCategories != null && RecipeCategories.Items != null && RecipeCategories.Items.Any())
                            {
                                @foreach (var item in RecipeCategories.Items)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => Recipe.RecipeCategoryId)" />
                    </div>

                    <div class="form-group mt-3">
                        <label for="image" class="col-sm-3">Select image: </label>
                        <InputFile id="image" class="form-control" OnChange="OnInputFileChangeAsync" accept="image/png, image/jpeg, image/gif" />
                        <ValidationMessage For="@(() => Recipe.ImageContent)" />
                    </div>

                    <div class="form-group mt-3">
                        <label for="ingredientCategory" class="col-sm-3">Ingredient category: </label>
                        <InputSelect id="ingredientCategory" class="form-select" @bind-Value="@ProductCategoryId">
                            <option selected value="0">Choose...</option>
                            @if (ProductCategories != null && ProductCategories.Items != null && ProductCategories.Items.Any())
                            {
                                @foreach (var item in ProductCategories.Items)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            }
                        </InputSelect>
                    </div>

                    <div class="form-group mt-3">
                        <label for="ingredient" class="col-sm-3">Ingredient: </label>
                        <InputSelect id="ingredient" class="form-select" @bind-Value="@ProductId">
                            <option selected value="0">Choose...</option>
                            @if (Products != null && Products!.Items!.Any())
                            {
                                @foreach (var item in Products?.Items!)
                                {
                                    <option value="@item.Id">@item.Name (@item.BaseUnit!.Name)</option>
                                }
                            }
                        </InputSelect>
                    </div>

                    <div class="form-group mt-3">
                        <label for="unit" class="col-sm-3">Unit of measurement: </label>
                        <InputSelect id="unit" class="form-select" @bind-Value="@UnitId">
                            <option selected value="0">Choose...</option>
                            @if (Units != null && Units.Any())
                            {
                                @foreach (var unit in Units!)
                                {
                                    <option value="@unit.Id">@unit.Name</option>
                                }
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => UnitId)" />
                    </div>

                    <div class="form-group mt-3">
                        <label for="quantity" class="col-sm-3">Quantity: </label>
                        <div class="input-group">
                            <InputText id="quantity" class="form-control" @bind-Value="@Quantity" @oninput="CheckQuantityAsync" placeholder="Enter the quantity for the product"></InputText>
                            <button id="addButton" class="btn btn-primary" type="button" @onclick="@AddIngredient" disabled="@(!CanAddIngredient)">Add</button>
                        </div>
                        <ValidationMessage For="@(() => Quantity)" />
                    </div>

                    <br />

                    <div class="col">
                        <ValidationMessage For="@(() => Recipe.Ingredients)" />
                        <TableTemplate Data="@Recipe.Ingredients" ShowIndex="true">
                            <TableCaption>List of ingredients:</TableCaption>
                            <TableHeader>
                                <th>Name</th>
                                <th></th>
                                <th>Quantity</th>
                                <th>Unit</th>
                                <th>Category</th>
                                <th style="width: 30px"></th>
                            </TableHeader>
                            <RowTemplate Context="RecipeIngredient">
                                <td>@RecipeIngredient.Product?.Name</td>
                                <td>
                                    <img src="@RecipeIngredient.Product?.ImageUrl" class="img-fluid" width="100" height="80" />
                                </td>
                                <td>@RecipeIngredient.Quantity</td>
                                <td>@RecipeIngredient.Unit?.Name</td>
                                <td>@RecipeIngredient.Product?.ProductCategory?.Name</td>
                                <td><button class="btn-close btn-sm" type="button" @onclick="() => DeleteIngredientAsync(RecipeIngredient.Product!)"></button></td>
                            </RowTemplate>
                        </TableTemplate>
                    </div>

                    <button type="submit" class="btn btn-primary btn-sm">Save</button>
                    <button class="btn btn-danger btn-sm" type="button" @onclick="@DeleteAsync">Delete</button>
                    <button class="btn btn-primary btn-sm" type="button" @onclick="@NavigateToOverview">Back to overview</button>
                </EditForm>
            </div>
        </div>
    </div>
}

<ConfirmDialog @ref="dialog" />

<script>
    function checkQuantity() {
        var quantity = document.getElementById("quantity").value;
        var unit = document.getElementById("unit").value;
        var addButton = document.getElementById("addButton");
        if (quantity > 0 && unit != "0") {
            addButton.disabled = false;
        } else {
            addButton.disabled = true;
        }
    }

    function updateHeader() {
        var input = document.getElementById("name").value;
        document.getElementById("headerName").innerText = input;
    }
</script>