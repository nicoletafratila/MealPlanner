@page "/mealplanedit"
@page "/mealplanedit/{Id}"
@using Common.Constants
@using RecipeBook.Shared.Models

<Breadcrumb style="--bs-breadcrumb-divider: '>';" Items="_navItems"></Breadcrumb>

<style>
    .table-grid > thead {
        visibility: collapse;
    }

    .table-responsive {
        justify-content: center;
        display: flex;
    }

    .card {
        max-width: 1370px;
    }
</style>

@if (MealPlan != null)
{
    <div class="col-sm-6">
        <div class="card" style="width: max-content;">
            <div class="card-header">
                <table>
                    <tr class="row g-0" style="display:contents">
                        <td class="col-md-8" style="vertical-align: top">
                            <h2 id="headerName">@MealPlan.Name</h2>
                        </td>
                    </tr>
                </table>
            </div>

            <div class="card-body">
                <EditForm Model="@MealPlan" OnValidSubmit="async () => await SaveAsync()">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <label for="name" class="col-sm-3">Meal plan name: </label>
                        <InputText id="name" class="form-control" @bind-Value="@MealPlan.Name" placeholder="Enter meal plan name" oninput="updateHeader()"></InputText>
                        <ValidationMessage For="@(() => MealPlan.Name)" />
                    </div>

                    <div class="form-group mt-3">
                        <label for="recipeCategory" class="col-sm-3">Recipe category: </label>
                        <InputSelect id="recipeCategory" class="form-select" @bind-Value="@RecipeCategoryId">
                            <option selected value="0">Choose...</option>
                            @if (Categories != null && Categories.Items != null && Categories.Items.Any())
                            {
                                @foreach (var item in Categories.Items)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            }
                        </InputSelect>
                    </div>

                    <div class="form-group mt-3">
                        <label for="recipe" class="col-sm-3">Recipe: </label>
                        <div class="input-group">
                            <InputSelect id="recipe" class="form-select" @bind-Value="@RecipeId">
                                <option selected value="0">Choose...</option>
                                @if (Recipes != null && Recipes!.Items!.Any())
                                {
                                    @foreach (var item in Recipes?.Items!)
                                    {
                                        <option value="@item.Id">@item.Name</option>
                                    }
                                }
                            </InputSelect>
                            <button class="btn btn-primary" type="button" @onclick="async ()=> await AddRecipeAsync()" disabled="@(!CanAddRecipe)">Add</button>
                        </div>
                    </div>
@* 
                    <TableTemplate Data="@MealPlan.Recipes" ShowIndex="false">
                        <TableHeader>
                            <th></th>
                        </TableHeader>
                        <RowTemplate Context="RecipeModel">
                            @if (RecipeModel != null)
                            {
                                <td style="vertical-align:middle">
                                    <div style="display:flex; align-items: center">
                                        <p>@RecipeModel.Name</p>
                                    </div>
                                </td>
                            }
                        </RowTemplate>
                    </TableTemplate> *@

                    @* @ref="selectedRecipeGrid" *@
                    <div class="card-body">
                        <ValidationMessage For="@(() => MealPlan.Recipes)" />
                        <GridTemplate TItem="RecipeModel" DataProvider="RecipesDataProviderAsync" TableGridClass="@_tableGridClass" AllowPaging="false">
                            <Columns>
                                <GridColumn TItem="RecipeModel" Filterable="false">
                                    <ChildContent Context="recipeContext">
                                        <div class="card-recipe">
                                            <div class="card-header" style="padding: 0px;">
                                                <img src="@recipeContext.ImageUrl" class="img-fluid" style="width: 200px; height: 100%; object-fit: cover; cursor: pointer; border-top-left-radius: 5px; border-top-right-radius: 5px;" @onclick="async () => await ShowRecipeAsync(recipeContext)" />
                                            </div>
                                            <div class="card-body">
                                                <table>
                                                    <tr>
                                                        <td class="fill-space">
                                                            @recipeContext.Name
                                                        </td>
                                                        <td class="min-space">
                                                            @if (!string.IsNullOrWhiteSpace((recipeContext.Source)))
                                                            {
                                                                <a href="@recipeContext.Source" target="_blank">
                                                                    <img src="Images\webIcon.png" alt="icon" class="small-icon">
                                                                </a>
                                                            }
                                                        </td>
                                                        <td class="min-space">
                                                            <img src="Images\delete.png" alt="icon" class="small-icon" @onclick="async () => await DeleteRecipeAsync(recipeContext)">
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="fill-space">
                                                            @recipeContext.RecipeCategoryName
                                                        </td>
                                                    </tr>
                                                </table>
                                            </div>
                                        </div>
                                    </ChildContent>
                                </GridColumn>
                            </Columns>
                        </GridTemplate>

                        <button class="btn btn-primary btn-sm" type="submit">Save</button>
                        <button class="btn btn-danger btn-sm" type="button" @onclick="async ()=> await DeleteAsync()">Delete</button>
                        <button class="btn btn-primary btn-sm" type="button" @onclick="async ()=> await SaveShoppingListAsync()">Make shopping list</button>
                        <button class="btn btn-primary btn-sm" type="button" @onclick="@NavigateToOverview">Back to overview</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}

<ConfirmDialog @ref="_dialog" />
<Offcanvas @ref="_offCanvas" />

<script>
    function updateHeader() {
        var input = document.getElementById("name").value;
        document.getElementById("headerName").innerText = input;
    }
</script>